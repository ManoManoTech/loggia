[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "mm-utils"
dynamic = ["urls"]
version = "0.1"
description = "Common utils and logging configurations for ManoMano Python projects"
authors = [
  { name = "Gabriel Dugny", email = "gabriel.dugny@manomano.com" },
  { name = "Elie Bleton", email = "elie.bleton@manomano.com" },
  { name = "Jonathan Gallon", email = "jonathan.gallon@manomano.com" },
]
dependencies = [
    "structlog>=23.1.0",
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }


[project.optional-dependencies]
pygit2 = ["pygit2"]
loguru = [
    "loguru>=0.7.0",
]
rich = [
    "rich>=13.3.4",
]


# [tool.hatch]
# [tool.hatch.version]
# source = "env"
# variable = "VERSION"
[tool.hatch.metadata]
allow-direct-references = true

source = "vcs"
[tool.hatch.build.hooks.vcs]
version-file = "_version.py"
[tool.hatch.metadata.hooks.vcs.urls]
***REMOVED***
***REMOVED***

[tool.hatch.envs.default]
dependencies = ["pytest", "pytest-cov"]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=mm_utils --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311"]

[tool.hatch.envs.default.env-vars]
***REMOVED***


[tool.pdm]
[tool.pdm.scripts]
test = "pytest tests"

[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[tool.pdm.resolution.overrides]
pygit2 = "1.11.1"
[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.2.0",
    "black>=22.12.0",
    "mypy>=1.2",
    "pylint>=2.15.8",
    "pytest-cov>=4.0.0",
    "tox-pdm>=0.6.1",
    "yamllint>=1.28.0",
    "hatch-vcs>=0.3.0",
    "hatchling>=1.12.2",
    "ipdb>=0.13.13",
    "rich>=13.3.4",
    "gunicorn>=20.1.0",
    "hypercorn>=0.14.3",
    "ruff>=0.0.262",
    "python-json-logger>=2.0.7",
]
doc = [
  "mkdocs>=1.4.2",
  "mkdocs-material>=8.5.11",
  "mkdocs-git-revision-date-plugin>=0.3.2",
  "mkdocs-include-markdown-plugin>=3.9.1",
  "mkdocstrings[python]>=0.19.1",
  "mkdocs-section-index>=0.3.4",
]

[tool.pytest]
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]

[tool.coverage]
[tool.coverage.run]
branch = true
parallel = true
omit = ["mm_utils/__about__.py", "tests/*", "__pypackages__/*", ".venv/*"]
source = ["mm_utils"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]


[tool.black]
line-length = 140
target-version = ['py310']

[tool.isort]
profile = "black"
py_version = 310
line_length = 140
wrap_length = 140

[tool.pylint]
[tool.pylint.MASTER]
py-version = "3.10"
ignore = ['__pypackages__', '.git', 'packages', '.venv']


[tool.pylint.FORMAT]
max-line-length = 180

[tool.ruff]
line-length = 140
ignore = [
  "E501",   # Line too long
  "ANN101", # Missing type annotation for self in method
]


[tool.mypy]
python_version = "3.11"
strict_optional = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs"
allow_redefinition = false
ignore_missing_imports = true
local_partial_types = true
strict_equality = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = false
check_untyped_defs = true
